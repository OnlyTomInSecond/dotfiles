# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"

# setup key accordingly
[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"       beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"        end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"     overwrite-mode
[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}"  backward-delete-char
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"     delete-char
[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"         up-line-or-history
[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"       down-line-or-history
[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"       backward-char
[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"      forward-char
[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"     beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"   end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}" ]] && bindkey -- "${key[Shift-Tab]}"  reverse-menu-complete

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
	autoload -Uz add-zle-hook-widget
	function zle_application_mode_start { echoti smkx }
	function zle_application_mode_stop { echoti rmkx }
	add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
	add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi

autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

[[ -n "${key[Up]}"   ]] && bindkey -- "${key[Up]}"   up-line-or-beginning-search
[[ -n "${key[Down]}" ]] && bindkey -- "${key[Down]}" down-line-or-beginning-search



# autoload -Uz add-zsh-hook

#========================================================================================
# enable color support of ls and also add handy aliases
# if [ -x /usr/bin/dircolors ]; then
# 	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
# 	alias ls='ls --color=auto'
# 	alias dir='dir --color=auto'
# 	alias vdir='vdir --color=auto'
# 
# 	alias grep='grep --color=auto --binary-files=without-match'
#     alias fgrep='grep -F --color=auto -i -n'
# 	#alias fgrep='fgrep --color=auto -i -n '
# 	#alias egrep='egrep --color=auto -i -n'
# fi

# [ "$TERM" = "xterm-kitty" ] && alias ssh="kitty +kitten ssh"

alias ls='ls --color=auto'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'

alias grep='grep --color=auto --binary-files=without-match'
alias fgrep='grep -F --color=auto -i -n'

# some more ls aliases
alias ll='ls -ahl'
alias mv='mv -i'
alias cp='cp -i'
alias rm='rm -i'
alias diff='diff --color=auto --strip-trailing-cr'
alias ccal='ccal -u '
#alias emacs='emacs -nw' # no GUI for emacs

#alias sudo='sudo -E'
#alias nv-run="__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia "

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

#export REPO_URL='https://mirrors.tuna.tsinghua.edu.cn/git/git-repo'

##For Buid android
export USE_CCACHE=1
export CCACHE_EXEC=/usr/bin/ccache
export CCACHE_DIR="/run/media/whh/Develop/.ccache/"
#For rustup
export RUSTUP_UPDATE_ROOT='https://mirrors.tuna.tsinghua.edu.cn/rustup/rustup'
export RUSTUP_DIST_SERVER='https://mirrors.tuna.tsinghua.edu.cn/rustup'

#ccache -M 30G
#typeset -U path PATH
#path=(~/bin $path)
#export PATH

# Python venv
#source ~/.local/share/python-pip/bin/activate
alias active-py='source ~/.local/share/python-pip/bin/activate'

#=====================================================================================
#fweather()
#{
#    ip=$(curl -s cip.cc | head -n 1 | cut -d ":" -f 2 | sed -e 's/^[ \t]*//')
#    curl -H "Accept-Language: zh" https://wttr.in/@${ip}
#    unset ip
#    #curl -H "Accept-Language: zh" "https://wttr.in/@$(curl -s cip.cc | head -n 1 | cut -d ":" -f 2)"
#}

#alias setproxy="export ALL_PROXY=socks5://127.0.0.1:2080" 
#alias unsetproxy="unset ALL_PROXY"

function captive_login() {
    xdg-open http://$(ip --oneline route get 1.1.1.1 | awk '{print $3}')
    echo "Done"
}


